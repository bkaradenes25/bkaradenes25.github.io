---
title: "Projects"
---

## SCORE Network

[SCORE](https://scorenetwork.org/index.html){target="_blank"} is a national network for developing and disseminating Sports Content for Outreach, Research, and Education in data science, funded by the National Science Foundation.

I worked on this project during my junior year spring semester and the following summer as a summer fellow. My main role in the project was a content creator - producing modules and working with my classmates and professors to create data science education materials to place in the SCORE network.

My workflow process included finding/scraping a relevant data set, creating exploratory graphs and models using R, creating worksheets and learning modules, then sending my work to peers and faculty to be peer reviewed.

Examples of the work can be found here:

- [https://modules.scorenetwork.org/](https://modules.scorenetwork.org/){target="_blank"}: contains the completed modules produced across all of SCORE.
    
- [https://data.scorenetwork.org/](https://data.scorenetwork.org/){target="_blank"}: A data repository containing sports related datasets.

- [https://iramler.github.io/slu_score_preprints/](https://iramler.github.io/slu_score_preprints/){target="_blank"}: A repository of in-development modules produced by St. Lawrence University students and faculty. Many of the modules linked here are currently under review for inclusion in the SCORE Network's repository linked above.

## MLB Spray Charts Shiny App

I created a shiny app displaying Major League Baseball batting spray charts for the 2019-2023 playoffs. The app includes the different types of balls in play, filters for distance and exit velocity, and whether a player was a pull, opposite field, or evenly spread hitter. The app can be found [Here](https://bkaradenes.shinyapps.io/Batting/){target="_blank"}.

## Megadetector

For my computer science internship for [Nature Up North](https://www.natureupnorth.org/){target="_blank"} I worked on modifying Microsoft's Megadetector Python script in order to automate game camera image sorting that Nature Up North receives from community members. The repository for this can be found [Here](https://github.com/NatureUpNorth/MegaDetector){target="_blank"}.

## North Country Wild Uploader

For [Nature Up North](https://www.natureupnorth.org/){target="_blank"} I helped develop an uploader for game camera images that will be used by community members in upstate NY. The uploader is written in Java and has the user fill out a variety of information including location, organization, dates, and habitat. This repository can be found [Here](https://github.com/NatureUpNorth/NCW-Uploader){target="_blank"}.

## North Country Wild Image Filtering

My last project for Nature Up North was editing Python scripts to filter the images and make it easier to upload to the Zooniverse site. The work involved updating the modules and ensuring each image has the correct location, timestamp, and copyright information. The repository can be found [Here](https://github.com/NatureUpNorth/North-Country-Wild/tree/main){target="_blank"}.

## Clustering MLB Starting Pitchers

For my Honors Senior Project I clustered MLB starting pitchers from the 2023 season. I used both R and Python to achieve this. By grouping pitchers based on pitch selection, I'm looking to see how pitchers within those groups may change their "style" under different conditions i.e runners in scoring position, different counts, different outs, different types of hitters. I used heatmaps, linear models, hierarchal clustering, ranks and z-scores to visualize the data. The project culminated in a 40-page report where I explained each step of the process. The repository for this can be found [Here](https://github.com/bkaradenes25/SYE){target="_blank"}.

## Books Database

Using data found [Here](https://www.kaggle.com/datasets/saurabhbagchi/books-dataset){target="_blank"} two groupmates and I created a database granting each other access to the different tables and setting up primary and foreign keys. Then, we made queries to find information such as average book rating, top 10 reviewers, inserting new users, and most popular books.

## Pitch Recommender App

Using Statcast pitch-by-pitch data, I developed a machine learning model that I turned into a Streamlit app that serves as a pitch recommender based on game situation. The app is written in Python and the repository can be found [Here](https://github.com/bkaradenes25/pitch-recommender){target="_blank"}. After applying the situation (outs, innings, runners on base, etc.), you will get ranked pitches based on predicted success probabilities. The app can be found [Here](https://pitchrecommender.streamlit.app/){target="_blank"}.

